# .github/workflows/deploy.yml
name: Deploy to GCP

on:
  push:
    branches:
      - prod

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Copy code to GCP instance
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.GCP_HOST }}
          username: ${{ secrets.GCP_USERNAME }}
          key: ${{ secrets.GCP_SSH_KEY }}
          source: "."
          target: "/home/${{ secrets.GCP_USERNAME }}/medeasy"

      - name: SSH into GCP and configure environment
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.GCP_HOST }}
          username: ${{ secrets.GCP_USERNAME }}
          key: ${{ secrets.GCP_SSH_KEY }}
          script: |
            cd /home/${{ secrets.GCP_USERNAME }}/medeasy

            # .env 파일 생성 (docker 디렉토리 안에 생성)
            echo "MONGO_INITDB_ROOT_USERNAME=${{ secrets.MONGO_INITDB_ROOT_USERNAME }}" > docker/.env
            echo "MONGO_INITDB_ROOT_PASSWORD=${{ secrets.MONGO_INITDB_ROOT_PASSWORD }}" >> docker/.env
            echo "MONGO_HOST=${{ secrets.MONGO_HOST }}" >> docker/.env
            echo "MONGO_PORT=${{ secrets.MONGO_PORT }}" >> docker/.env
            echo "MONGO_INITDB_DATABASE=${{ secrets.MONGO_INITDB_DATABASE }}" >> docker/.env
            echo "ELASTICSEARCH_HOST=${{ secrets.ELASTICSEARCH_HOST }}" >> docker/.env
            echo "ELASTICSEARCH_PORT=${{ secrets.ELASTICSEARCH_PORT }}" >> docker/.env
            echo "GOOGLE_CLOUD_PROJECT=${{ secrets.GOOGLE_CLOUD_PROJECT }}" >> docker/.env
            echo "GOOGLE_APPLICATION_CREDENTIALS=/gemini_config.json" >> docker/.env

            # Google 인증 JSON 복원
            echo "${{ secrets.GOOGLE_CONFIG_JSON_BASE64 }}" | base64 --decode > docker/gemini_config.json

            # 초기 실행 여부 판단
            INITIALIZED_FILE="./docker/.docker_initialized"

            if [ ! -f "$INITIALIZED_FILE" ]; then
              echo "[INFO] 초기 실행: 전체 서비스 실행"
              docker-compose -f docker/docker-compose.yml --env-file docker/.env up -d --build
              touch "$INITIALIZED_FILE"
            else
              echo "[INFO] FastAPI만 재배포"
              docker-compose -f docker/docker-compose.yml --env-file docker/.env up -d --build fastapi
            fi
